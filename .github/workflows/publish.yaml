name: publish
# https://github.com/MZanggl/flooent/blob/latest/package.json
on:
  release:
    types: [published]
concurrency:
  # Ensures that only one deploy task per branch/environment will run at a time.
  group: environment-${{ github.ref }}

  # cancel any in-progress job or run
  # group: ${{ github.head_ref }}

  # Automatically cancel in-progress actions on the same branch
  # group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: '‚òÅÔ∏è checkout repository'
        uses: actions/checkout@v3
        with:
        # "ref" specifies the branch to check out.
        # "github.event.release.target_commitish" is a global variable and specifies the branch the release targeted
          ref: ${{ github.event.release.target_commitish }}

      - name: 'üîß setup node'
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: 'üîß setup pnpm'
        uses: pnpm/action-setup@v2.2.1
        with:
          version: latest
          run_install: |
            - recursive: false

      # set up git since we will later push to the repo
      - run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # upgrade npm version in package.json to the tag used in the release.
      - run: pnpm version ${{ github.event.release.tag_name }}

      - run: pnpm build
      - run: pnpm test

      - name: 'üöÄ Publish'
        run: pnpm publish --ignore-scripts --access public  --tag latest
        # ${{ github.event.release.target_commitish }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # push the version changes to GitHub
      - run: git push
        env:
          # The secret is passed automatically. Nothing to configure.
          github-token: ${{ secrets.GITHUB_TOKEN }}
